#!/usr/bin/perl

use strict;
use warnings;

use XML::YPathScript;
use Getopt::Long;
use Symbol;
use File::Basename;

my ( $query, $interpolate );
GetOptions( 'query=s' => \$query, 'interpolate' => \$interpolate );

# trick so that xps story  => xps story.xml story.xps
@ARGV = ( $ARGV[0].'.xml', $ARGV[0].'.xps'  ) if @ARGV == 1;

# offline dirty magic
$Fake::Request = AxKit::Apache->request();
$Fake::Request->param( split /[;&=]/, $query ) if $query;		

usage() unless @ARGV == 2;

my ($xmlfile, $stylefile) = @ARGV;
$Fake::Request->uri( $xmlfile );

$XML::YPathScript::DoNotInterpolate = !$interpolate if $interpolate;

my $xml = gensym;
my $stylesheet = gensym;

open($xml, $xmlfile) || die "Cannot open XML file '$xmlfile': $!";
chdir dirname($stylefile);
open($stylesheet, basename($stylefile)) || die "Cannot open Stylesheet file '$stylefile': $!";

my $xps = XML::YPathScript->new(xml => $xml, stylesheet => $stylesheet);

print $xps->process( 'return' );

exit(0);

sub usage {
    print STDERR <<EOT;
Usage: xpathscript [-i] [-q="query-string"] xmlfile stylesheet_file
       or
       xpathscript [-i] [-q="query-string"] file
	     in which case the xml file will be assumed 
		 to be file.xml and the xps file to be file.xps

	-i interpolation is enabled
	-q the string will be used as if it was the 
		query string passed by the client.

	see 'perldoc yps' for more details
EOT
    exit(0);
}

# Let's cheat so that stylesheets using AxKit::Apache->request
# works offline too
package AxKit::Apache;

sub request
{
	return bless \%Fake::Request, 'AxKit::Apache';
}

sub args{ return $_[0]->param() };

sub param
{
	my $self = shift;
	my %h = @_;
	while( my( $k, $v ) = each %h )
	{
		$self->{param}{$k}= $v;	
	}
	return %{$self->{param}};
}

sub uri
{
		my $self = shift;
		$self->{uri} = shift if @_;
		return $self->{uri};

}


=head1 NAME

yps - YPathScript command-line utility

=head1 SYNOPSIS

yps [-i] [-q=<query_string>] <xml_file> <stylesheet_file>

yps [-i] [-q=<query_string>] <name> 
	
=head1 DESCRIPTION

If the second type of call is used, yps assumes that the xml source
file  and the YPS stylesheet are named <name>.xml and <name>.xps.

=head2 ARGUMENTS

=over

=item -i

Enable interpolation

=item -q=<query_string>

query_string is passed as if it was a query string. E.g.,

	yps -q="page=3&images=no" doc.xml htmlify.xps
	
will act as if the document was requested from the web server with the url
'http://your.server.org/doc.xml?page=3&images=no'

=back

=head1 SEE ALSO

XML::YPathScript

=head1 AUTHOR

Yanick Champoux, <yanick@babyl.dyndns.org>

=head1 VERSION

Version 0.1, June 29th, 2004.

=cut

